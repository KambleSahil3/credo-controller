diff --git a/node_modules/@credo-ts/core/build/storage/Repository.js b/node_modules/@credo-ts/core/build/storage/Repository.js
index fb55ee6..ec51804 100644
--- a/node_modules/@credo-ts/core/build/storage/Repository.js
+++ b/node_modules/@credo-ts/core/build/storage/Repository.js
@@ -3,6 +3,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.Repository = void 0;
 const error_1 = require("../error");
 const RepositoryEvents_1 = require("./RepositoryEvents");
+const uuid_1 = require("../utils/uuid");
 // eslint-disable-next-line @typescript-eslint/no-explicit-any
 class Repository {
     constructor(recordClass, storageService, eventEmitter) {
@@ -91,11 +92,15 @@ class Repository {
      * @throws {RecordDuplicateError} if multiple records are found for the given query
      */
     async findSingleByQuery(agentContext, query) {
-        console.log("Query to get the record 1123:", query);
         const records = await this.findByQuery(agentContext, query);
-        console.log("Record 46645554:", records)
         if (records.length > 1) {
-            throw new error_1.RecordDuplicateError(`Multiple records found for given query '${JSON.stringify(query)}'`, {
+            const uuidVal = (0, uuid_1.uuid)();
+            agentContext.config.logger.debug('---------------------------------------------------------------');
+            agentContext.config.logger.debug(`${uuidVal} OWL-Debug Multiple records found and records are:::'${JSON.stringify(records)}'`);
+            agentContext.config.logger.debug('---------------------------------------------------------------');
+            agentContext.config.logger.debug(`${uuidVal} OWL-Debug Multiple records found for query('${JSON.stringify(query)}'`);
+            agentContext.config.logger.debug('---------------------------------------------------------------');
+            throw new error_1.RecordDuplicateError(`${uuidVal} OWL-Debug Multiple records found for given query '${JSON.stringify(query)}'`, {
                 recordType: this.recordClass.type,
             });
         }
